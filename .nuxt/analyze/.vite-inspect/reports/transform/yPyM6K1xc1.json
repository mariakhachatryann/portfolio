{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { executeOnSingleOrMultiple, isNumber, itemFromSingleOrMultiple, } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions ?? itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n",
      "start": 1703957085347,
      "end": 1703957085472,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703957085472,
      "end": 1703957085472,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703957085472,
      "end": 1703957085472,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703957085472,
      "end": 1703957085472,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703957085472,
      "end": 1703957085472,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703957085473,
      "end": 1703957085473,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703957085473,
      "end": 1703957085474,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703957085474,
      "end": 1703957085474,
      "order": "normal"
    }
  ]
}
