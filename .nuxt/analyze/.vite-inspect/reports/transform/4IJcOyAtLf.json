{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nimport { split } from \"./Utils\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBoundsOptions = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;\n        if (bottom) {\n            destroyBounds.bottom = (getRangeValue(bottom) * canvasSize.height) / 100;\n        }\n        if (left) {\n            destroyBounds.left = (getRangeValue(left) * canvasSize.width) / 100;\n        }\n        if (right) {\n            destroyBounds.right = (getRangeValue(right) * canvasSize.width) / 100;\n        }\n        if (top) {\n            destroyBounds.top = (getRangeValue(top) * canvasSize.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source?.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            split(this.engine, this.container, particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n}\n",
      "start": 1703957085365,
      "end": 1703957085461,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703957085461,
      "end": 1703957085461,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703957085461,
      "end": 1703957085462,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703957085462,
      "end": 1703957085462,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703957085462,
      "end": 1703957085462,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703957085462,
      "end": 1703957085462,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703957085462,
      "end": 1703957085462,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703957085462,
      "end": 1703957085462,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703957085462,
      "end": 1703957085462,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703957085462,
      "end": 1703957085462,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703957085462,
      "end": 1703957085462,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703957085462,
      "end": 1703957085462,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703957085462,
      "end": 1703957085462,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703957085462,
      "end": 1703957085463,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703957085463,
      "end": 1703957085463,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703957085463,
      "end": 1703957085463,
      "order": "normal"
    }
  ]
}
