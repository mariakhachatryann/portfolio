{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/tsparticles-move-base/esm/BaseMover.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n",
      "start": 1703979087899,
      "end": 1703979087954,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703979087954,
      "end": 1703979087954,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703979087954,
      "end": 1703979087955,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703979087955,
      "end": 1703979087955,
      "order": "normal"
    }
  ]
}
