{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n",
      "start": 1703957085149,
      "end": 1703957085238,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703957085238,
      "end": 1703957085238,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703957085238,
      "end": 1703957085239,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703957085239,
      "end": 1703957085239,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703957085239,
      "end": 1703957085239,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703957085239,
      "end": 1703957085239,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703957085239,
      "end": 1703957085239,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703957085239,
      "end": 1703957085239,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703957085239,
      "end": 1703957085239,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703957085239,
      "end": 1703957085239,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703957085239,
      "end": 1703957085241,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703957085241,
      "end": 1703957085241,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703957085241,
      "end": 1703957085241,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703957085242,
      "end": 1703957085242,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703957085242,
      "end": 1703957085242,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703957085242,
      "end": 1703957085242,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703957085242,
      "end": 1703957085242,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703957085242,
      "end": 1703957085242,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703957085243,
      "end": 1703957085243,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703957085243,
      "end": 1703957085243,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703957085243,
      "end": 1703957085243,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703957085243,
      "end": 1703957085243,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703957085243,
      "end": 1703957085243,
      "order": "normal"
    }
  ]
}
