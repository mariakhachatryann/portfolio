{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n",
      "start": 1702665912262,
      "end": 1702665912356,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702665912356,
      "end": 1702665912356,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702665912357,
      "end": 1702665912357,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702665912357,
      "end": 1702665912357,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702665912357,
      "end": 1702665912357,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702665912357,
      "end": 1702665912358,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702665912358,
      "end": 1702665912358,
      "order": "normal"
    }
  ]
}
