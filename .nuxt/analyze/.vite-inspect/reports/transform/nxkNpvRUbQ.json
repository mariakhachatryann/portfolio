{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/tsparticles-shape-image/esm/Utils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n",
      "start": 1702665913100,
      "end": 1702665913165,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702665913165,
      "end": 1702665913165,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702665913165,
      "end": 1702665913166,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702665913166,
      "end": 1702665913166,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702665913166,
      "end": 1702665913167,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702665913167,
      "end": 1702665913167,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702665913167,
      "end": 1702665913167,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702665913167,
      "end": 1702665913167,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702665913167,
      "end": 1702665913167,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702665913167,
      "end": 1702665913168,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702665913168,
      "end": 1702665913168,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1702665913168,
      "end": 1702665913168,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1702665913168,
      "end": 1702665913168,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1702665913168,
      "end": 1702665913168,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1702665913168,
      "end": 1702665913168,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702665913168,
      "end": 1702665913168,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702665913168,
      "end": 1702665913168,
      "order": "normal"
    }
  ]
}
