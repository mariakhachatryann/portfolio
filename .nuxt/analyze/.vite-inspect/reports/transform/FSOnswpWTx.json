{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nimport { updateTilt } from \"./Utils\";\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        const tilt = particle.tilt?.enable && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = particle.options.tilt?.animation;\n        if (tiltAnimation?.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tiltAnimation = particle.options.tilt?.animation;\n        return !particle.destroyed && !particle.spawning && !!tiltAnimation?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source?.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n",
      "start": 1703979087642,
      "end": 1703979087732,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703979087732,
      "end": 1703979087732,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703979087732,
      "end": 1703979087732,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703979087732,
      "end": 1703979087732,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703979087732,
      "end": 1703979087732,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703979087732,
      "end": 1703979087732,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703979087732,
      "end": 1703979087732,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703979087732,
      "end": 1703979087732,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703979087732,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703979087733,
      "end": 1703979087733,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703979087733,
      "end": 1703979087734,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703979087734,
      "end": 1703979087734,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703979087734,
      "end": 1703979087734,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703979087734,
      "end": 1703979087734,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703979087734,
      "end": 1703979087735,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703979087735,
      "end": 1703979087735,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703979087735,
      "end": 1703979087735,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703979087735,
      "end": 1703979087735,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703979087735,
      "end": 1703979087735,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703979087735,
      "end": 1703979087735,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703979087735,
      "end": 1703979087735,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703979087735,
      "end": 1703979087735,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703979087735,
      "end": 1703979087735,
      "order": "normal"
    }
  ]
}
