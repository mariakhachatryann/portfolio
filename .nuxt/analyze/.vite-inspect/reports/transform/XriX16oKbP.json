{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/tsparticles-updater-out-modes/esm/Utils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n",
      "start": 1703957086061,
      "end": 1703957086200,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703957086200,
      "end": 1703957086200,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703957086200,
      "end": 1703957086201,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703957086201,
      "end": 1703957086201,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703957086201,
      "end": 1703957086201,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703957086201,
      "end": 1703957086201,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703957086201,
      "end": 1703957086201,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703957086201,
      "end": 1703957086201,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703957086201,
      "end": 1703957086201,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703957086201,
      "end": 1703957086201,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703957086201,
      "end": 1703957086201,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703957086201,
      "end": 1703957086201,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703957086201,
      "end": 1703957086201,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703957086201,
      "end": 1703957086201,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703957086201,
      "end": 1703957086202,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703957086202,
      "end": 1703957086202,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703957086202,
      "end": 1703957086202,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703957086202,
      "end": 1703957086202,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703957086202,
      "end": 1703957086202,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703957086202,
      "end": 1703957086202,
      "order": "normal"
    }
  ]
}
