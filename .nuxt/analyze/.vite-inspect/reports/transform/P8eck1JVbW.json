{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/tsparticles-updater-stroke-color/esm/Utils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n",
      "start": 1703979088039,
      "end": 1703979088132,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1703979088132,
      "end": 1703979088132,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1703979088132,
      "end": 1703979088132,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1703979088132,
      "end": 1703979088132,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703979088133,
      "end": 1703979088133,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1703979088133,
      "end": 1703979088134,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1703979088134,
      "end": 1703979088134,
      "order": "normal"
    }
  ]
}
