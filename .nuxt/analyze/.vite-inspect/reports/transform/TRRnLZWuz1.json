{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/tsparticles-interaction-particles-links/esm/Linker.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n",
      "start": 1702665913394,
      "end": 1702665913493,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702665913493,
      "end": 1702665913493,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702665913493,
      "end": 1702665913494,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702665913494,
      "end": 1702665913494,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702665913494,
      "end": 1702665913494,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702665913494,
      "end": 1702665913494,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702665913494,
      "end": 1702665913494,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702665913494,
      "end": 1702665913495,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702665913495,
      "end": 1702665913495,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702665913495,
      "end": 1702665913495,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1702665913495,
      "end": 1702665913495,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1702665913495,
      "end": 1702665913495,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1702665913495,
      "end": 1702665913495,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1702665913495,
      "end": 1702665913495,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702665913495,
      "end": 1702665913495,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702665913495,
      "end": 1702665913495,
      "order": "normal"
    }
  ]
}
