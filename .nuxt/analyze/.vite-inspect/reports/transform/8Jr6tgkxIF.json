{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/tsparticles-interaction-particles-links/esm/Utils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n",
      "start": 1702544652726,
      "end": 1702544652802,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1702544652802,
      "end": 1702544652802,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1702544652802,
      "end": 1702544652803,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702544652803,
      "end": 1702544652803,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1702544652803,
      "end": 1702544652803,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702544652803,
      "end": 1702544652803,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702544652803,
      "end": 1702544652803,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702544652803,
      "end": 1702544652803,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702544652803,
      "end": 1702544652803,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702544652803,
      "end": 1702544652803,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702544652803,
      "end": 1702544652804,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702544652804,
      "end": 1702544652804,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702544652804,
      "end": 1702544652804,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702544652804,
      "end": 1702544652804,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702544652804,
      "end": 1702544652804,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702544652804,
      "end": 1702544652804,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702544652805,
      "end": 1702544652805,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1702544652805,
      "end": 1702544652805,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1702544652805,
      "end": 1702544652805,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1702544652805,
      "end": 1702544652805,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1702544652805,
      "end": 1702544652805,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702544652805,
      "end": 1702544652805,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702544652805,
      "end": 1702544652805,
      "order": "normal"
    }
  ]
}
