{
  "resolvedId": "C:/Users/user/Desktop/portfolio/node_modules/nuxt-particles/dist/runtime/components/NuxtParticles.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nimport { onMounted, ref, onUnmounted } from 'vue'\nimport { tsParticles } from 'tsparticles-engine'\nimport {useRuntimeConfig, useState} from '#app'\nimport type {\n  ISourceOptions as ParticlesOptions,\n  Container as ParticlesContainer\n} from 'tsparticles-engine'\nimport {loadParticles} from '../lib/loaders'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'NuxtParticles',\n  __ssrInlineRender: true,\n  props: {\n    id: {},\n    options: {},\n    url: {}\n  },\n  emits: [\"load\"],\n  setup(__props: any, { emit: __emit }) {\n\nconst particlesLoaded = useState('__nuxt_particles_loaded', () => false)\nconst container = ref<ParticlesContainer | undefined>(undefined)\nconst { mode, lazy } = useRuntimeConfig().public.particles\n\nconst props = __props\n\nconst emit = __emit\n\nonMounted(async () => {\n  if(lazy && mode !== 'custom' && !particlesLoaded.value) {\n    tsParticles.init()\n    await loadParticles(tsParticles, mode)\n    particlesLoaded.value = true\n  }\n  const particlesContainer = await tsParticles.load({\n    id: props.id,\n    options: props.options,\n    url: props.url\n  })\n\n  if(particlesContainer) {\n    emit('load', particlesContainer)\n    container.value = particlesContainer\n  }\n})\n\nonUnmounted(() => {\n  if (!container.value) {\n    return\n  }\n  container.value.destroy()\n})\n\nreturn (_ctx: any,_push: any,_parent: any,_attrs: any) => {\n  _push(`<div${_ssrRenderAttrs(_mergeProps({ id: _ctx.id }, _attrs))}></div>`)\n}\n}\n\n})",
      "start": 1702665920108,
      "end": 1702665920108,
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/user/Desktop/portfolio/node_modules/nuxt-particles/dist/runtime/components/NuxtParticles.vue"
        ],
        "sourcesContent": [
          "<template>\n  <div :id=\"id\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted, ref, onUnmounted } from 'vue'\nimport { tsParticles } from 'tsparticles-engine'\nimport {useRuntimeConfig, useState} from '#app'\nimport type {\n  ISourceOptions as ParticlesOptions,\n  Container as ParticlesContainer\n} from 'tsparticles-engine'\nimport {loadParticles} from '../lib/loaders'\n\nconst particlesLoaded = useState('__nuxt_particles_loaded', () => false)\nconst container = ref<ParticlesContainer | undefined>(undefined)\nconst { mode, lazy } = useRuntimeConfig().public.particles\n\nconst props = defineProps<{\n  id: string,\n  options?: ParticlesOptions,\n  url?: string\n}>()\n\nconst emit = defineEmits<{\n  load: [container: ParticlesContainer]\n}>()\n\nonMounted(async () => {\n  if(lazy && mode !== 'custom' && !particlesLoaded.value) {\n    tsParticles.init()\n    await loadParticles(tsParticles, mode)\n    particlesLoaded.value = true\n  }\n  const particlesContainer = await tsParticles.load({\n    id: props.id,\n    options: props.options,\n    url: props.url\n  })\n\n  if(particlesContainer) {\n    emit('load', particlesContainer)\n    container.value = particlesContainer\n  }\n})\n\nonUnmounted(() => {\n  if (!container.value) {\n    return\n  }\n  container.value.destroy()\n})\n</script>\n"
        ],
        "names": [],
        "mappings": ";;;;AAKA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C;;;;;;;;;;;;AATwB;AAUxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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"
      }
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702665920108,
      "end": 1702665920108,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702665920108,
      "end": 1702665920108,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702665920108,
      "end": 1702665920108,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702665920108,
      "end": 1702665920108,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1702665920108,
      "end": 1702665920108,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702665920108,
      "end": 1702665920108,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { mergeProps as _mergeProps } from \"vue\";\nimport { ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\";\nimport { onMounted, ref, onUnmounted } from \"vue\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { useRuntimeConfig, useState } from \"#app\";\nimport { loadParticles } from \"../lib/loaders\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"NuxtParticles\",\n  __ssrInlineRender: true,\n  props: {\n    id: {},\n    options: {},\n    url: {}\n  },\n  emits: [\"load\"],\n  setup(__props, { emit: __emit }) {\n    const particlesLoaded = useState(\"__nuxt_particles_loaded\", () => false);\n    const container = ref(void 0);\n    const { mode, lazy } = useRuntimeConfig().public.particles;\n    const props = __props;\n    const emit = __emit;\n    onMounted(async () => {\n      if (lazy && mode !== \"custom\" && !particlesLoaded.value) {\n        tsParticles.init();\n        await loadParticles(tsParticles, mode);\n        particlesLoaded.value = true;\n      }\n      const particlesContainer = await tsParticles.load({\n        id: props.id,\n        options: props.options,\n        url: props.url\n      });\n      if (particlesContainer) {\n        emit(\"load\", particlesContainer);\n        container.value = particlesContainer;\n      }\n    });\n    onUnmounted(() => {\n      if (!container.value) {\n        return;\n      }\n      container.value.destroy();\n    });\n    return (_ctx, _push, _parent, _attrs) => {\n      _push(`<div${_ssrRenderAttrs(_mergeProps({ id: _ctx.id }, _attrs))}></div>`);\n    };\n  }\n});\n",
      "start": 1702665920108,
      "end": 1702665920111,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/user/Desktop/portfolio/node_modules/nuxt-particles/dist/runtime/components/NuxtParticles.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nimport { onMounted, ref, onUnmounted } from 'vue'\nimport { tsParticles } from 'tsparticles-engine'\nimport {useRuntimeConfig, useState} from '#app'\nimport type {\n  ISourceOptions as ParticlesOptions,\n  Container as ParticlesContainer\n} from 'tsparticles-engine'\nimport {loadParticles} from '../lib/loaders'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'NuxtParticles',\n  __ssrInlineRender: true,\n  props: {\n    id: {},\n    options: {},\n    url: {}\n  },\n  emits: [\"load\"],\n  setup(__props: any, { emit: __emit }) {\n\nconst particlesLoaded = useState('__nuxt_particles_loaded', () => false)\nconst container = ref<ParticlesContainer | undefined>(undefined)\nconst { mode, lazy } = useRuntimeConfig().public.particles\n\nconst props = __props\n\nconst emit = __emit\n\nonMounted(async () => {\n  if(lazy && mode !== 'custom' && !particlesLoaded.value) {\n    tsParticles.init()\n    await loadParticles(tsParticles, mode)\n    particlesLoaded.value = true\n  }\n  const particlesContainer = await tsParticles.load({\n    id: props.id,\n    options: props.options,\n    url: props.url\n  })\n\n  if(particlesContainer) {\n    emit('load', particlesContainer)\n    container.value = particlesContainer\n  }\n})\n\nonUnmounted(() => {\n  if (!container.value) {\n    return\n  }\n  container.value.destroy()\n})\n\nreturn (_ctx: any,_push: any,_parent: any,_attrs: any) => {\n  _push(`<div${_ssrRenderAttrs(_mergeProps({ id: _ctx.id }, _attrs))}></div>`)\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AACpD,SAAS,cAAc,mBAAmB;AAC1C,SAAS,kBAAkB,uBAAuB;AAElD,SAAS,WAAW,KAAK,mBAAmB;AAC5C,SAAS,mBAAmB;AAC5B,SAAQ,kBAAkB,gBAAe;AAKzC,SAAQ,qBAAoB;AAG5B,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,mBAAmB;AAAA,EACnB,OAAO;AAAA,IACL,IAAI,CAAC;AAAA,IACL,SAAS,CAAC;AAAA,IACV,KAAK,CAAC;AAAA,EACR;AAAA,EACA,OAAO,CAAC,MAAM;AAAA,EACd,MAAM,SAAc,EAAE,MAAM,OAAO,GAAG;AAExC,UAAM,kBAAkB,SAAS,2BAA2B,MAAM,KAAK;AACvE,UAAM,YAAY,IAAoC,MAAS;AAC/D,UAAM,EAAE,MAAM,KAAK,IAAI,iBAAiB,EAAE,OAAO;AAEjD,UAAM,QAAQ;AAEd,UAAM,OAAO;AAEb,cAAU,YAAY;AACpB,UAAG,QAAQ,SAAS,YAAY,CAAC,gBAAgB,OAAO;AACtD,oBAAY,KAAK;AACjB,cAAM,cAAc,aAAa,IAAI;AACrC,wBAAgB,QAAQ;AAAA,MAC1B;AACA,YAAM,qBAAqB,MAAM,YAAY,KAAK;AAAA,QAChD,IAAI,MAAM;AAAA,QACV,SAAS,MAAM;AAAA,QACf,KAAK,MAAM;AAAA,MACb,CAAC;AAED,UAAG,oBAAoB;AACrB,aAAK,QAAQ,kBAAkB;AAC/B,kBAAU,QAAQ;AAAA,MACpB;AAAA,IACF,CAAC;AAED,gBAAY,MAAM;AAChB,UAAI,CAAC,UAAU,OAAO;AACpB;AAAA,MACF;AACA,gBAAU,MAAM,QAAQ;AAAA,IAC1B,CAAC;AAED,WAAO,CAAC,MAAU,OAAW,SAAa,WAAgB;AACxD,YAAM,OAAO,gBAAgB,YAAY,EAAE,IAAI,KAAK,GAAG,GAAG,MAAM,CAAC,CAAC,SAAS;AAAA,IAC7E;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702665920111,
      "end": 1702665920111,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702665920111,
      "end": 1702665920111,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1702665920111,
      "end": 1702665920111,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1702665920111,
      "end": 1702665920111,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702665920111,
      "end": 1702665920111,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702665920111,
      "end": 1702665920111,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702665920111,
      "end": 1702665920111,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702665920111,
      "end": 1702665920111,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702665920111,
      "end": 1702665920111,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1702665920111,
      "end": 1702665920111,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702665920111,
      "end": 1702665920112,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1702665920112,
      "end": 1702665920112,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702665920112,
      "end": 1702665920112,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702665920112,
      "end": 1702665920112,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702665920112,
      "end": 1702665920112,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702665920112,
      "end": 1702665920112,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702665920112,
      "end": 1702665920112,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702665920112,
      "end": 1702665920112,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702665920112,
      "end": 1702665920112,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702665920112,
      "end": 1702665920112,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702665920112,
      "end": 1702665920113,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702665920112,
      "end": 1702665920113,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702665920113,
      "end": 1702665920114,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702665920113,
      "end": 1702665920114,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702665920114,
      "end": 1702665920114,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702665920114,
      "end": 1702665920114,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702665920114,
      "end": 1702665920114,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702665920114,
      "end": 1702665920114,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1702665920114,
      "end": 1702665920114,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1702665920114,
      "end": 1702665920114,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { mergeProps as _mergeProps } from \"vue\";\nimport { ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\";\nimport { onMounted, ref, onUnmounted } from \"vue\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { useRuntimeConfig, useState } from \"#app\";\nimport { loadParticles } from \"../lib/loaders\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"NuxtParticles\",\n  __ssrInlineRender: true,\n  props: {\n    id: {},\n    options: {},\n    url: {}\n  },\n  emits: [\"load\"],\n  setup(__props, { emit: __emit }) {\n    const particlesLoaded = useState(\"__nuxt_particles_loaded\", () => false);\n    const container = ref(void 0);\n    const { mode, lazy } = useRuntimeConfig().public.particles;\n    const props = __props;\n    const emit = __emit;\n     /*#__PURE__*/ false && onMounted(async () => {\n      if (lazy && mode !== \"custom\" && !particlesLoaded.value) {\n        tsParticles.init();\n        await loadParticles(tsParticles, mode);\n        particlesLoaded.value = true;\n      }\n      const particlesContainer = await tsParticles.load({\n        id: props.id,\n        options: props.options,\n        url: props.url\n      });\n      if (particlesContainer) {\n        emit(\"load\", particlesContainer);\n        container.value = particlesContainer;\n      }\n    });\n    onUnmounted(() => {\n      if (!container.value) {\n        return;\n      }\n      container.value.destroy();\n    });\n    return (_ctx, _push, _parent, _attrs) => {\n      _push(`<div${_ssrRenderAttrs(_mergeProps({ id: _ctx.id }, _attrs))}></div>`);\n    };\n  }\n});\n",
      "start": 1702665920114,
      "end": 1702665920115,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingshD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACplxB,qCAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702665920115,
      "end": 1702665920115,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702665920115,
      "end": 1702665920115,
      "order": "normal"
    }
  ]
}
